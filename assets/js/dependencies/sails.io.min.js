!function(){function e(e){function n(e){return e=e||{prefix:!0},"object"!=typeof console||"function"!=typeof console.log||"function"!=typeof console.log.bind?function(){}:function(){var t=Array.prototype.slice.call(arguments);if("production"!==p.sails.environment){var o="";e.prefix&&t.unshift(o),console.log.bind(console).apply(this,t)}}}function r(e){var t=e.requestQueue;if(t){for(var o in t){var n={}.hasOwnProperty.call(t,o);if(n){var i=t[o];e.request.apply(e,i)}}e.requestQueue=null}}function u(e,t){if(e=e||{},"undefined"==typeof window)return t();var o=document.createElement("script");window._sailsIoJSConnect=function(e){o&&o.parentNode&&o.parentNode.removeChild(o),t(e)},o.src=e.url,document.getElementsByTagName("head")[0].appendChild(o)}function d(e){if(this.body=e.body,this.headers=e.headers||{},this.statusCode=void 0===e.statusCode?200:e.statusCode,this.statusCode<200||this.statusCode>=400){var t;0===this.statusCode?t="The socket request failed.":(t="Server responded with a "+this.statusCode+" status code",t+=":\n```\n"+JSON.stringify(this.body,null,2)+"\n```"),this.error=Error(t)}}function l(e,t){if(!e._raw)throw Error("Failed to emit from socket- raw SIO socket is missing.");var o=t.cb;delete t.cb;var n=t.method;e._raw.emit(n,t,function(e){o&&o(e.body,new d(e))})}function f(e){var o=this;e=e||{},o._isConnecting=!1,o._mightBeAboutToAutoConnect=!1;var n={};t.forEach(function(e){"headers"!=e&&Object.defineProperty(o,e,{get:function(){return"url"==e?n[e]||o._raw&&o._raw.io&&o._raw.io.uri:n[e]},set:function(t){if(o.isConnected()&&p.sails.strict!==!1&&t!=n[e])throw Error("Cannot change value of `"+e+"` while socket is connected.");o._raw&&o._raw.io&&o._raw.io.reconnecting&&!o._raw.io.skipReconnect&&(o._raw.io.skipReconnect=!0,h("Stopping reconnect; use .reconnect() to connect socket after changing options.")),n[e]=t}})}),t.forEach(function(t){o[t]=e[t]}),o.eventQueue={},o.on("sails:parseError",function(e){h("Sails encountered an error parsing a socket message sent from this client, and did not have access to a callback function to respond with."),h("Error details:",e)})}var p;if(p=e?e:c,!p)throw Error("node"===i.platform?"No socket.io client available.  When requiring `sails.io.js` from Node.js, a socket.io client (`io`) must be passed in; e.g.:\n```\nvar io = require('sails.io.js')( require('socket.io-client') )\n```\n(see https://github.com/balderdashy/sails.io.js/tree/master/test for more examples)":"The Sails socket SDK depends on the socket.io client, but the socket.io global (`io`) was not available when `sails.io.js` loaded.  Normally, the socket.io client code is bundled with sails.io.js, so something is a little off.  Please check to be sure this version of `sails.io.js` has the minified Socket.io client at the top of the file.");if(p.sails)throw Error("node"===i.platform?"The provided socket.io client (`io`) has already been augmented into a Sails socket SDK instance (it has `io.sails`).":"The socket.io client (`io`) has already been augmented into a Sails socket SDK instance.  Usually, this means you are bringing `sails.io.js` onto the page more than once.");var h=n();return h.noPrefix=n({prefix:!1}),d.prototype.toString=function(){return"[ResponseFromSails]  -- Status: "+this.statusCode+"  -- Headers: "+this.headers+"  -- Body: "+this.body},d.prototype.toPOJO=function(){return{body:this.body,headers:this.headers,statusCode:this.statusCode}},d.prototype.pipe=function(){return Error("Client-side streaming support not implemented yet.")},f.prototype._connect=function(){var e=this;if(e._isConnecting=!0,t.forEach(function(t){void 0===e[t]&&(e[t]=p.sails[t])}),e.extraHeaders=e.initialConnectionHeaders||{},e.initialConnectionHeaders&&"node"!==i.platform&&"object"==typeof console&&"function"==typeof console.warn&&console.warn("initialConnectionHeaders option available in Node.js only!"),e.url=e.url?e.url.replace(/(\/)$/,""):void 0,"string"==typeof e.query)e.query=e.query.replace(/^\?/,""),e.query+="&"+i.versionString;else{if(e.query&&"object"==typeof e.query)throw Error("`query` setting does not currently support configuration as a dictionary (`{}`).  Instead, it must be specified as a string like `foo=89&bar=hi`");if(e.query)throw Error("Unexpected data type provided for `query` setting: "+e.query);e.query=i.versionString}var o=function(){if("undefined"==typeof window||void 0===window.location)return!1;if("string"!=typeof e.url)return!1;var t=function(){try{t=e.url.match(/^([a-z]+:\/\/)/i)[1].toLowerCase()}catch(o){}return t=t||"http://"}(),o=!!e.url.match("^https"),n=function(){try{return e.url.match(/^[a-z]+:\/\/[^:]*:([0-9]*)/i)[1]}catch(t){}return o?"443":"80"}(),i=e.url.replace(/^([a-z]+:\/\/)/i,"");if(t.replace(/[:\/]/g,"")!==window.location.protocol.replace(/[:\/]/g,""))return!0;var r=0===i.search(window.location.hostname);if(!r)return!0;var s=window.location.protocol.match(/https/i),a=window.location.port+""||(s?"443":"80");return n!==a?!0:!1}();!function(t){if(!e.useCORSRouteToGetCookie||!o)return t();var n=e.url;n+="string"==typeof e.useCORSRouteToGetCookie?e.useCORSRouteToGetCookie:"/__getcookie",u({url:n,method:"GET"},t)}(function(){e._raw=p(e.url,e),e._raw.io.engine.transport.on("error",function(t){e._isConnecting&&(e._isConnecting=!1,e.connectionErrorTimestamp=(new Date).getTime(),h("===================================="),h("The socket was unable to connect."),h("The server may be offline, or the"),h("socket may have failed authorization"),h("based on its origin or other factors."),h("You may want to check the values of"),h("`sails.config.sockets.beforeConnect`"),h("and `sails.config.sockets.onlyAllowOrigins`"),h("in your app."),h("More info: https://sailsjs.com/config/sockets"),h(""),h("Technical details:"),h(t),h("===================================="))}),e.replay(),e.on("connect",function(){e._isConnecting=!1,h.noPrefix("\n\n  |>    Now connected to "+(e.url?e.url:"Sails")+".\n\\___/   For help, see: http://bit.ly/2q0QDpf\n        (using sails.io.js "+p.sails.sdk.platform+" SDK @v"+p.sails.sdk.version+")\n         Connected at: "+new Date+"\n\n\n")}),e.on("disconnect",function(){e.connectionLostTimestamp=(new Date).getTime(),h("===================================="),h("Socket was disconnected from Sails."),h("Usually, this is due to one of the following reasons:\n -> the server "+(e.url?e.url+" ":"")+"was taken down\n -> your browser lost internet connectivity"),h("====================================")}),e.on("reconnecting",function(t){h("\n        Socket is trying to reconnect to "+(e.url?e.url:"Sails")+"...\n_-|>_-  (attempt #"+t+")\n\n")}),e.on("reconnect",function(){e._isConnecting||e.on("connect",r.bind(e,e));var t,o;e.connectionLostTimestamp?(t=(new Date).getTime()-e.connectionLostTimestamp,o=t/1e3):e.connectionErrorTimestamp?(t=(new Date).getTime()-e.connectionErrorTimestamp,o=t/1e3):(t="???",o="???"),h("\n  |>    Socket reconnected successfully after\n\\___/   being offline at least "+o+" seconds.\n\n")}),e.on("error",function(t){e._isConnecting=!1,h("Failed to connect socket (possibly due to failed `beforeConnect` on server)","Error:",t)})})},f.prototype.reconnect=function(){if(this._isConnecting)throw Error("Cannot connect- socket is already connecting");if(this.isConnected())throw Error("Cannot connect- socket is already connected");return this._connect()},f.prototype.disconnect=function(){if(this._isConnecting=!1,!this.isConnected())throw Error("Cannot disconnect- socket is already disconnected");return this._raw.disconnect()},f.prototype.isConnected=function(){return this._raw?!!this._raw.connected:!1},f.prototype.isConnecting=function(){return this._isConnecting},f.prototype.mightBeAboutToAutoConnect=function(){return this._mightBeAboutToAutoConnect},f.prototype.replay=function(){var e=this;for(var t in e.eventQueue)for(var o in e.eventQueue[t])e._raw.on(t,e.eventQueue[t][o]);return e.isConnected()?r(e):e._raw.once("connect",r.bind(e,e)),e},f.prototype.on=function(e,t){return this._raw?(this._raw.on(e,t),this):(this.eventQueue[e]?this.eventQueue[e].push(t):this.eventQueue[e]=[t],this)},f.prototype.off=function(e,t){return this._raw?(this._raw.off(e,t),this):(this.eventQueue[e]&&this.eventQueue[e].indexOf(t)>-1&&this.eventQueue[e].splice(this.eventQueue[e].indexOf(t),1),this)},f.prototype.removeAllListeners=function(){return this._raw?(this._raw.removeAllListeners(),this):(this.eventQueue={},this)},f.prototype.get=function(e,t,o){return"function"==typeof t&&(o=t,t={}),this.request({method:"get",params:t,url:e},o)},f.prototype.post=function(e,t,o){return"function"==typeof t&&(o=t,t={}),this.request({method:"post",data:t,url:e},o)},f.prototype.put=function(e,t,o){return"function"==typeof t&&(o=t,t={}),this.request({method:"put",params:t,url:e},o)},f.prototype.patch=function(e,t,o){return"function"==typeof t&&(o=t,t={}),this.request({method:"patch",params:t,url:e},o)},f.prototype["delete"]=function(e,t,o){return"function"==typeof t&&(o=t,t={}),this.request({method:"delete",params:t,url:e},o)},f.prototype.request=function(e,t){var o='Usage:\nsocket.request( options, [fnToCallWhenComplete] )\n\noptions.url :: e.g. "/foo/bar"\noptions.method :: e.g. "get", "post", "put", or "delete", etc.\noptions.params :: e.g. { emailAddress: "mike@example.com" }\noptions.headers :: e.g. { "x-my-custom-header": "some string" }';if(void 0!==t&&"function"!=typeof t)throw Error("Invalid callback function!\n"+o);if("object"!=typeof e||"string"!=typeof e.url)throw Error("Invalid or missing URL!\n"+o);if(e.method&&"string"!=typeof e.method)throw Error('Invalid `method` provided (should be a string like "post" or "put")\n'+o);if(e.headers&&"object"!=typeof e.headers)throw Error("Invalid `headers` provided (should be a dictionary with string values)\n"+o);if(e.params&&"object"!=typeof e.params)throw Error("Invalid `params` provided (should be a dictionary with JSON-serializable values)\n"+o);if(e.data&&"object"!=typeof e.data)throw Error("Invalid `data` provided (should be a dictionary with JSON-serializable values)\n"+o);if(e.data&&e.params)throw Error("Cannot specify both `params` and `data`!  They are aliases of each other.\n"+o);if(e.data&&(e.params=e.data,delete e.data),!this.isConnected())return this.requestQueue=this.requestQueue||[],void this.requestQueue.push([e,t]);e.headers=e.headers||{};var n={method:(e.method||"get").toLowerCase(),headers:e.headers,data:e.params||e.data||{},url:e.url.replace(/^(.+)\/*\s*$/,"$1"),cb:t};if(this.headers&&"object"==typeof this.headers)for(var i in this.headers)e.headers.hasOwnProperty(i)||(e.headers[i]=this.headers[i]);l(this,n)},f.prototype._request=function(){throw Error("`_request()` was a private API deprecated as of v0.11 of the sails.io.js client. Use `.request()` instead.")},p.sails={autoConnect:!0,reconnection:!1,useCORSRouteToGetCookie:!0,environment:s.match(/(\#production|\.min\.js)/g)?"production":"development",sdk:i,transports:["websocket"]},o.forEach(function(e){void 0!==a[e]&&(p.sails[e]=a[e])}),p.sails.connect=function(e,t){"object"==typeof e&&(t=e,e=null),t=t||{},t.url=e||t.url||void 0;var o=new f(t);return o._connect(),o},p.socket=new f,p.socket._mightBeAboutToAutoConnect=!0,setTimeout(function(){return p.socket._mightBeAboutToAutoConnect=!1,p.sails.autoConnect===!1||p.sails.autoconnect===!1?void delete p.socket:void p.socket._connect()},0),p}var t=["useCORSRouteToGetCookie","url","multiplex","transports","query","path","headers","initialConnectionHeaders","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","rejectUnauthorized","randomizationFactor","timeout"],o=["autoConnect","reconnection","environment","headers","url","transports","path"],n={version:"__sails_io_sdk_version",platform:"__sails_io_sdk_platform",language:"__sails_io_sdk_language"},i={version:"1.1.12",language:"javascript",platform:function(){return"object"==typeof module&&void 0!==module.exports?"node":"browser"}()};i.versionString=n.version+"="+i.version+"&"+n.platform+"="+i.platform+"&"+n.language+"="+i.language;var r=function(){if("object"!=typeof window||"object"!=typeof window.document||"function"!=typeof window.document.getElementsByTagName)return null;var e=window.document.getElementsByTagName("script");return e[e.length-1]}(),s="",a={};if(r){if(s=r.src,o.forEach(function(e){a[e]=function(){var t=r.getAttribute("data-"+e);if(t||(t=r.getAttribute(e)),"string"!=typeof t){if(null===t)return void 0;throw Error("sails.io.js :: Unexpected/invalid script tag configuration for `"+e+"`: `"+t+"` (a `"+typeof t+"`). Should be a string.")}try{return JSON.parse(t)}catch(o){return t}}(),void 0===a[e]&&delete a[e]}),void 0!==a.autoConnect)if(""===a.autoConnect)a.autoConnect=!0;else if("boolean"!=typeof a.autoConnect)throw Error("sails.io.js :: Unexpected/invalid configuration for `autoConnect` provided in script tag: `"+a.autoConnect+"` (a `"+typeof a.autoConnect+"`). Should be a boolean.");if(void 0!==a.environment&&"string"!=typeof a.environment)throw Error("sails.io.js :: Unexpected/invalid configuration for `environment` provided in script tag: `"+a.environment+"` (a `"+typeof a.environment+"`). Should be a string.");if(void 0!==a.headers&&("object"!=typeof a.headers||Array.isArray(a.headers)))throw Error("sails.io.js :: Unexpected/invalid configuration for `headers` provided in script tag: `"+a.headers+"` (a `"+typeof a.headers+'`). Should be a JSON-compatible dictionary (i.e. `{}`).  Don\'t forget those double quotes (""), even on key names!  Use single quotes (\'\') to wrap the HTML attribute value; e.g. `headers=\'{"X-Auth": "foo"}\'`');if(void 0!==a.url&&"string"!=typeof a.url)throw Error("sails.io.js :: Unexpected/invalid configuration for `url` provided in script tag: `"+a.url+"` (a `"+typeof a.url+"`). Should be a string.")}var c="undefined"!=typeof io?io:void 0;"node"===i.platform?module.exports=e:"function"==typeof define&&define.amd?define([],function(){return e}):e()}();